[build-system]
build-backend = "setuptools.build_meta"
requires = [
  "setuptools>=61.2",
]

[project]
name = "DBUtils"
version = "3.1.0b1"
description = "Database connections for multi-threaded environments."
license = {text = "MIT License"}
authors = [{name = "Christoph Zwerschke", email = "cito@online.de"}]
requires-python = ">3.7"
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Environment :: Web Environment",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Topic :: Database",
  "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
  "Topic :: Software Development :: Libraries :: Python Modules",
]
[project.optional-dependencies]
pg = [
  "PyGreSQL>=5",
]
testing = [
  "pytest>=7",
  "ruff",
]

[project.readme]
file = "README.md"
content-type = "text/markdown"

[project.urls]
Homepage = "https://webwareforpython.github.io/DBUtils/"
Download = "https://pypi.org/project/DBUtils/"
Documentation = "https://webwareforpython.github.io/DBUtils/main.html"
Changelog = "https://webwareforpython.github.io/DBUtils/changelog.html"
"Issue Tracker" = "https://github.com/WebwareForPython/DBUtils/issues"
"Source Code" = "https://github.com/WebwareForPython/DBUtils"

[tool.setuptools]
packages = ["dbutils"]
platforms = ["any"]
include-package-data = false

[tool.ruff]
select = [
  "A",      # flake8-builtins
  "ARG",    # flake8-unused-arguments
  "B",      # flake8-bugbear
  "C4",     # flake8-comprehensions
  "C90",    # McCabe cyclomatic complexity
  "DTZ",    # flake8-datetimez
  "E",      # pycodestyle
  "EXE",    # flake8-executable
  "F",      # Pyflakes
  "G",      # flake8-logging-format
  "I",      # isort
  "ICN",    # flake8-import-conventions
  "INP",    # flake8-no-pep420
  "INT",    # flake8-gettext
  "ISC",    # flake8-implicit-str-concat
  "N",      # pep8-naming
  "PGH",    # pygrep-hooks
  "PIE",    # flake8-pie
  "PL",     # Pylint
  "PT",     # flake8-pytest-style
  "PTH",    # flake8-use-pathlib
  "PYI",    # flake8-pyi
  "RET",    # flake8-return
  "RSE",    # flake8-raise
  "RUF",    # Ruff-specific rules
  "S",      # flake8-bandit
  "T10",    # flake8-debugger
  "TCH",    # flake8-type-checking
  "TID",    # flake8-tidy-imports
  "UP",     # pyupgrade
  "W",      # pycodestyle
  "YTT",    # flake8-2020
  # "ANN",  # flake8-annotations
  # "BLE",  # flake8-blind-except
  # "COM",  # flake8-commas
  # "D",    # pydocstyle
  # "DJ",   # flake8-django
  # "EM",   # flake8-errmsg
  # "ERA",  # eradicate
  # "FBT",  # flake8-boolean-trap
  # "NPY",  # NumPy-specific rules
  # "PD",   # pandas-vet
  # "Q",    # flake8-quotes
  # "SIM",  # flake8-simplify
  # "SLF",  # flake8-self
  # "T20",  # flake8-print
  # "TRY",  # tryceratops
]
# You can use `ruff rule ...` to see what these ignored rules check
ignore = [
  "ARG002",
  "B007",
  "B904",
  "E722",
  "N811",
  "N818",
  "PIE790",
  "PLR5501",
  "PTH122",
  "PTH123",
  "S110",
]
line-length = 79
target-version = "py37"

[tool.ruff.mccabe]
max-complexity = 31

[tool.ruff.pylint]
allow-magic-value-types = ["int", "str"]
max-args = 12
max-branches = 41
max-statements = 95

[tool.ruff.per-file-ignores]
"docs/*" = [
  "INP001"  # allow stand-alone scripts
]
"tests/*" = [
  "S101"  # allow assert statements
]
